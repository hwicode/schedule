name: Java staging CD with GCP

on:
  push:
    branches:
      - main
  workflow_dispatch:
  
defaults:
  run:
    working-directory: ./_schedule/schedule
    
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: 'actions/checkout@v4'

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Set up MySQL and Redis
      run: |
        cd docker
        docker-compose -f docker-compose-local.yml up -d

    - name: Build with Gradle
      run: |
        echo ${{ secrets.APPLICATION_STAGE }} | base64 --decode > ./src/main/resources/application-stage.yml
        ./gradlew clean build

    - name: Temporarily save build artifact
      uses: actions/upload-artifact@v2
      with:
        name: build-artifact
        path: build/*
        retention-days: 1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
          
    - name: Build Docker
      run: |
        docker build -t ${{ secrets.DOCKER_REGISTRY_NAME }}:$GITHUB_SHA .
        docker tag ${{ secrets.DOCKER_REGISTRY_NAME }}:$GITHUB_SHA ${{ secrets.DOCKER_REGISTRY_NAME }}:latest
          
    - name: Push Docker
      run: |
       docker push ${{ secrets.DOCKER_REGISTRY_NAME }}:$GITHUB_SHA
       docker push ${{ secrets.DOCKER_REGISTRY_NAME }}:latest    
    
    - name: 'Login to gcloud'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'
      
    - name: 'Create Schedule Instance'
      run: |
        gcloud compute instances create schedule \
          --zone=asia-northeast3-a \
          --machine-type=e2-medium \
          --image-family=ubuntu-2004-lts \
          --image-project=ubuntu-os-cloud \
          --metadata=profile=stage,startup-script= ${{ secrets.STARTUP_SCRIPT }} \
          --tags=http-server,https-server,schedule-firewall \
          --network=schedule-vpc \
          --subnet=schedule-subnet \
          --boot-disk-size=10GB
          
